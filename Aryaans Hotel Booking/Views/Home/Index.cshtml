@model IEnumerable<Aryaans_Hotel_Booking.Models.HotelResultViewModel>
@{
    ViewData["Title"] = "Welcome to Aryaan's Hotel Booking";

    var selectedDatesValue = ViewData["SelectedDates"] as string;
    bool hasSelectedDates = !string.IsNullOrEmpty(selectedDatesValue);

    var selectedGuestsValue = ViewData["SelectedGuests"] as string;
    bool hasSelectedGuests = !string.IsNullOrEmpty(selectedGuestsValue);

    var selectedLocationValue = ViewData["SelectedLocation"] as string;
    bool hasSelectedLocation = !string.IsNullOrEmpty(selectedLocationValue);

    Func<string?, string?, string?, string> BuildQueryParams =
        (dates, guests, location) =>
        {
            var query = new System.Text.StringBuilder();
            if (!string.IsNullOrEmpty(dates)) query.Append($"&selectedDates={System.Net.WebUtility.UrlEncode(dates)}");
            if (!string.IsNullOrEmpty(guests)) query.Append($"&selectedGuests={System.Net.WebUtility.UrlEncode(guests)}");
            if (!string.IsNullOrEmpty(location)) query.Append($"&selectedLocation={System.Net.WebUtility.UrlEncode(location)}");
            return query.Length > 0 ? $"?{query.ToString().Substring(1)}" : "";
        };
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <style>
        :root {
            --ahb-primary-color: #74e5b2;
            --ahb-secondary-color: #a1d8f0;
            --ahb-light-text: #f1f3f5;
            --ahb-muted-text: #b3c2cc;
            --ahb-button-glow: rgba(116, 229, 178, 0.3);
            --ahb-form-element-height: 52px;
        }

        /* Styles from your original Index.cshtml for Hero Section */
        .hero-section {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 92vh;
            padding: 4rem 1rem;
            background: url('/images/hero-background.jpg') center center / cover no-repeat; /* Ensure this image exists */
            color: var(--ahb-light-text);
            text-align: center;
        }

        .hero-overlay {
            position: absolute;
            inset: 0;
            background: linear-gradient(to bottom, rgba(0, 0, 0, 0.45), rgba(0, 0, 0, 0.75));
            z-index: 1;
        }

        .hero-content {
            position: relative;
            z-index: 2;
            max-width: 900px;
            margin: 0 auto;
            animation: fadeUp 1s ease-out forwards;
            opacity: 0;
        }

        @@keyframes fadeUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .hero-title {
            font-size: 3.2rem;
            font-weight: 700;
            margin-bottom: 1rem;
            color: var(--ahb-light-text);
            text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.4);
        }

        .hero-subtitle {
            font-size: 1.2rem;
            font-weight: 300;
            margin-bottom: 2.5rem;
            color: var(--ahb-muted-text);
        }

        .hotel-search-form .form-control {
            background-color: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--ahb-light-text);
            padding: 0.95rem 1rem;
            border-radius: 8px;
            transition: all 0.2s ease-in-out;
            font-size: 0.95rem;
            height: var(--ahb-form-element-height);
            line-height: normal; /* Ensure vertical alignment */
            width: 100%;
            box-sizing: border-box;
        }

            .hotel-search-form .form-control::placeholder {
                color: var(--ahb-muted-text);
                opacity: 1;
            }

            .hotel-search-form .form-control:focus {
                background-color: rgba(255, 255, 255, 0.15);
                border-color: var(--ahb-primary-color);
                outline: none;
                box-shadow: 0 0 0 0.2rem var(--ahb-button-glow);
            }

        .ahb-datepicker-button, .ahb-guestpicker-button, .ahb-locationpicker-button {
            display: flex; /* This makes it behave like a block for alignment */
            align-items: center;
            justify-content: flex-start;
            gap: 0.5rem;
            text-decoration: none;
            cursor: pointer;
            color: var(--ahb-light-text);
            /* These are also .form-control, so they inherit height, padding etc. */
        }

            .ahb-datepicker-button .placeholder-text, .ahb-guestpicker-button .placeholder-text, .ahb-locationpicker-button .placeholder-text {
                color: var(--ahb-muted-text);
            }

            .ahb-datepicker-button:hover, .ahb-guestpicker-button:hover, .ahb-locationpicker-button:hover {
                background-color: rgba(255, 255, 255, 0.15); /* from .form-control:focus */
                border-color: var(--ahb-primary-color); /* from .form-control:focus */
                color: var(--ahb-primary-color);
                text-decoration: none;
                box-shadow: 0 0 0 0.2rem var(--ahb-button-glow); /* from .form-control:focus */
            }

                .ahb-datepicker-button:hover .placeholder-text, .ahb-guestpicker-button:hover .placeholder-text, .ahb-locationpicker-button:hover .placeholder-text {
                    color: var(--ahb-primary-color);
                }

            .ahb-datepicker-button .icon, .ahb-guestpicker-button .icon, .ahb-locationpicker-button .icon {
                width: 18px;
                height: 18px;
                fill: currentColor;
                flex-shrink: 0;
                opacity: 0.8;
                transition: opacity 0.2s ease-in-out;
            }

            .ahb-datepicker-button:hover .icon, .ahb-guestpicker-button:hover .icon, .ahb-locationpicker-button:hover .icon {
                opacity: 1;
            }

        /* Ensure .animated-button styles are complete and correct */
        .animated-button {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 4px; /* Reduced gap for better alignment with text */
            padding: 0.65rem 1.5rem; /* Adjust padding as needed */
            border: 2px solid transparent;
            font-size: 0.95rem;
            background-color: inherit; /* Should be transparent for hero */
            border-radius: 100px;
            font-weight: 600;
            color: var(--ahb-primary-color);
            box-shadow: 0 0 0 1.5px var(--ahb-primary-color);
            height: var(--ahb-form-element-height);
            width: 100%;
            transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
            overflow: hidden;
            cursor: pointer;
            text-decoration: none;
            line-height: normal; /* Added for vertical centering of text */
        }

            .animated-button svg {
                position: absolute;
                width: 24px;
                fill: var(--ahb-primary-color);
                z-index: 9;
                transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
            }

            .animated-button .arr-1 {
                right: 16px;
            }

            .animated-button .arr-2 {
                left: -25%;
            }

            .animated-button .circle {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 20px;
                height: 20px;
                background-color: var(--ahb-primary-color);
                border-radius: 50%;
                opacity: 0;
                transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
            }

            .animated-button .text {
                position: relative;
                z-index: 1;
                transform: translateX(-12px); /* Adjust as needed for centering */
                transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
            }

            .animated-button:hover {
                box-shadow: 0 0 0 12px transparent; /* Original style */
                color: #212121; /* Text color on hover */
                border-radius: 12px; /* Original style */
            }

                .animated-button:hover .arr-1 {
                    right: -25%;
                }

                .animated-button:hover .arr-2 {
                    left: 16px;
                }

                .animated-button:hover .text {
                    transform: translateX(12px); /* Adjust as needed */
                }

                .animated-button:hover svg {
                    fill: #212121; /* Arrow color on hover */
                }

                .animated-button:hover .circle {
                    width: 220px; /* Expands to fill button */
                    height: 220px; /* Expands to fill button */
                    opacity: 1;
                }

            .animated-button:disabled { /* Style for disabled button */
                background-color: rgba(116, 229, 178, 0.3); /* Semi-transparent primary color */
                color: rgba(241, 243, 245, 0.7); /* Lighter text */
                box-shadow: 0 0 0 1.5px rgba(116, 229, 178, 0.5);
                cursor: not-allowed;
            }

                .animated-button:disabled:hover .circle { /* Prevent hover animation on disabled */
                    width: 20px;
                    height: 20px;
                    opacity: 0;
                }

                .animated-button:disabled:hover .text {
                    transform: translateX(-12px);
                }

                .animated-button:disabled:hover svg {
                    fill: var(--ahb-primary-color); /* Keep original arrow color or make it muted */
                }

                .animated-button:disabled:hover .arr-1 {
                    right: 16px;
                }

                .animated-button:disabled:hover .arr-2 {
                    left: -25%;
                }


        .button-right-nudge {
            /* margin-left: 12px; original, check if still needed with col-lg-2 grid */
        }

        a.form-control { /* For the picker links that are also form-controls */
            text-align: left;
            line-height: 1.5; /* Original for text alignment */
        }

        /* Styles for the new Featured Hotels section */
        .featured-hotels-section {
            padding: 3rem 1rem; /* Adjusted padding */
            background-color: #ffffff; /* Changed to white as per your image, or choose a very light grey like #f8f9fa if preferred for contrast */
            color: #333; /* Default text color for this section */
        }

            .featured-hotels-section h2 {
                text-align: center;
                margin-bottom: 2.5rem;
                font-weight: 600; /* Slightly less heavy */
                color: #2c3e50; /* Darker, more standard heading color */
                font-size: 2rem;
            }

        /* Ensure Bootstrap's card styles are not being overly reset by global styles.
                   The _HotelCard.cshtml mostly uses Bootstrap classes. If Bootstrap CSS is linked
                   correctly in _Layout.cshtml, the cards should have a default look.
                   If they are still "all white", it implies Bootstrap might not be loading
                   or its styles are being heavily counteracted by other CSS.
                */

        /* Example: Minor enhancement to card if needed, but Bootstrap should handle most of it */
        .card {
            border: 1px solid #e9ecef; /* Default Bootstrap card border is often subtle */
        }

            .card .card-title {
                color: #343a40; /* Ensure card titles have good color */
            }

            .card .badge { /* Ensure badges have clear text */
                color: #212529; /* For light backgrounds */
            }

                .card .badge.bg-success, .card .badge.bg-primary { /* For dark backgrounds */
                    color: #fff;
                }

    </style>
}

<section class="hero-section">
    <div class="hero-overlay"></div>
    <div class="hero-content container">
        <h1 class="hero-title">Luxury Hotels, Tailored For You</h1>
        <p class="hero-subtitle">Plan your next escape with Aryaan’s Hotel Booking — elegance redefined.</p>

        <form asp-controller="Home" asp-action="SearchResults" method="get" class="hotel-search-form">
            <input type="hidden" name="destination" id="hidden-destination-input" value="@selectedLocationValue" />
            <input type="hidden" name="selectedDates" id="hidden-dates-input" value="@selectedDatesValue" />
            <input type="hidden" name="selectedGuests" id="hidden-guests-input" value="@selectedGuestsValue" />

            <div class="row g-2 justify-content-center align-items-center">
                <div class="col-lg-3 col-md-6 col-12">
                    <a href="/Home/DestinationPicker@(BuildQueryParams(selectedDatesValue, selectedGuestsValue, null))"
                       class="form-control ahb-locationpicker-button">
                        <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd" /></svg>
                        @if (hasSelectedLocation)
                        {
                            <span style="font-weight: 500;">@selectedLocationValue</span>
                        }
                        else
                        {
                            <span class="placeholder-text">Where to?</span>
                        }
                    </a>
                </div>
                <div class="col-lg-3 col-md-6 col-12">
                    <a href="/Home/DatePicker@(BuildQueryParams(null, selectedGuestsValue, selectedLocationValue))"
                       class="form-control ahb-datepicker-button">
                        <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" /></svg>
                        @if (hasSelectedDates)
                        {
                            <span style="font-weight: 500;">@selectedDatesValue</span>
                        }
                        else
                        {
                            <span class="placeholder-text">Select Dates</span>
                        }
                    </a>
                </div>
                <div class="col-lg-3 col-md-6 col-12">
                    <a href="/Home/GuestPicker@(BuildQueryParams(selectedDatesValue, null, selectedLocationValue))"
                       class="form-control ahb-guestpicker-button">
                        <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"><path d="M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0115 8h-1a4 4 0 00-3.86 2.87A6.967 6.967 0 008 16c0 .34.024.673.07 1H4a2 2 0 00-2 2v1a1 1 0 001 1h14a1 1 0 001-1v-1a2 2 0 00-2-2h-1.07z" /></svg>
                        @if (hasSelectedGuests)
                        {
                            <span style="font-weight: 500;">@selectedGuestsValue</span>
                        }
                        else
                        {
                            <span class="placeholder-text">Guests & Rooms</span>
                        }
                    </a>
                </div>
                <div class="col-lg-2 col-md-6 col-12 d-grid">
                    <button type="submit"
                            class="animated-button"
                            disabled="@(!hasSelectedLocation || !hasSelectedDates || !hasSelectedGuests)">
                        <svg viewBox="0 0 24 24" class="arr-2" xmlns="http://www.w3.org/2000/svg"><path d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"></path></svg>
                        <span class="text">Book Now</span>
                        <span class="circle"></span>
                        <svg viewBox="0 0 24 24" class="arr-1" xmlns="http://www.w3.org/2000/svg"><path d="M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z"></path></svg>
                    </button>
                </div>
            </div>
        </form>
    </div>
</section>

@if (Model != null && Model.Any())
{
    <section class="featured-hotels-section">
        <div class="container">
            <h2>Featured Stays</h2>
            <div class="row">
                @foreach (var hotel in Model)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <partial name="_HotelCard" model="hotel" />
                    </div>
                }
            </div>
        </div>
    </section>
}